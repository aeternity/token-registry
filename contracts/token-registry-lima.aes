contract Token =
  record meta_info =
    { name : string
    , symbol : string
    , decimals : int }
    
  entrypoint meta_info     : ()              => meta_info
  entrypoint total_supply  : ()              => int
  entrypoint owner         : ()              => address
  entrypoint balances      : ()              => map(address, int)
  entrypoint balance       : (address)       => option(int)
  entrypoint transfer      : (address, int)  => unit

contract TokenRegistry =
  type state = map(Token, Token.meta_info)
 
  stateful entrypoint init() : state = {}
  
  stateful entrypoint add_token(token : Token) : unit =
    put(state{ [token] = token.meta_info() })

  entrypoint get_all_tokens() : map(Token, Token.meta_info) = state
  entrypoint get_token_meta_info(token : Token) : Token.meta_info = token.meta_info()
  entrypoint get_token_balances(token : Token) : map(address, int) = token.balances()
  entrypoint get_token_balance(token : Token, account: address) : option(int) = token.balance(account)
  entrypoint get_token_owner(token : Token) : address = token.owner()
  entrypoint get_token_total_supply(token : Token) : int = token.total_supply()